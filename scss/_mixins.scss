@mixin sb-media($query) {
  @if $no-mq-support{
    @if $query < $serve-to-nomq-max-width{
      @content;
    }
  } @else {
    @media ( unquote('min-width:' + $query) ) {
      @content;
    }
  }
}

@mixin rem( $property, $a:0, $b:$a, $c:$a, $d:$b ) {
  @if ( $property == "font-size" ) {
    // $a is the font size
    // %b is the keyword
    @if ( $a != $b ) {
      font-size: $b;
    }
    @else {
      font-size: $a * $base-font-multiplier * 16px;
    }
    font-size: $a * 1rem;
  } @else {
    $apx: $a * $base-font-multiplier * 16px;
    $bpx: $b * $base-font-multiplier * 16px;
    $cpx: $c * $base-font-multiplier * 16px;
    $dpx: $d * $base-font-multiplier * 16px;
    $arem: $a * 1rem;
    $brem: $b * 1rem;
    $crem: $c * 1rem;
    $drem: $d * 1rem;

    @if ( $property == "padding" or $property == "margin" ){
      #{$property}: $apx $bpx $cpx $dpx;
      #{$property}: $arem $brem $crem $drem;
    } @else {
      #{$property}: $apx;
      #{$property}: $arem;
    }
  }
}

@mixin pointy-box( $height, $color ) {
  border: 1px solid $color;
  position: relative;
  height: $height;
  line-height: $height;

  &:after,
  &:before {
    content: "";
    border-style: solid;
    position: absolute;
    top: -1px;
  }
  &:before {
    border-color: transparent $color transparent transparent;
    border-width: ($height / 2) ($height / 2) ($height / 2) 0;
    left: -1 * $height / 1.9;
  }
  &:after {
    border-color: transparent transparent transparent $color;
    border-width: ($height / 2) 0 ($height / 2) ($height / 2);
    right: -1 * $height / 1.9;
  }
}
